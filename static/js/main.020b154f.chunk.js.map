{"version":3,"sources":["docs/pages/gettingStarted/gettingStarted.md","bootstrap.js","modules/constants.js","modules/styles/themeInitialState.js","modules/redux/themeReducer.js","modules/redux/store.js","modules/utils/helpers.js","modules/components/AppWrapper.js","modules/utils/net.js","modules/components/FabAddDevice.js","modules/components/Markdown.js","pages/GettingStartedPage.js","pages/ChannelPage.js","pages/Index.js","modules/utils/compose.js","serviceWorker.js","index.js","modules/components/prism.js","modules/styles/getTheme.js"],"names":["module","exports","__webpack_require__","p","install","ACTION_TYPES","THEME_CHANGE","OPTIONS_CHANGE","themeInitialState","direction","paletteType","paletteColors","primary","blue","secondary","main","darken","pink","A400","mapping","Object","defineProperty","state","action","payload","themeReducer","arguments","length","undefined","newState","type","store","createStore","combineReducers","theme","getCookie","name","regex","RegExp","concat","document","cookie","replace","generateClassName","createGenerateClassName","themeSideEffect","reduxTheme","setPrismTheme","lightTheme","darkTheme","body","dir","AppWrapper","this","props","jssStyles","querySelector","parentNode","removeChild","JSON","stringify","dispatch","parse","children","react_default","a","createElement","index_es","nextProps","prevState","prevProps","getTheme","React","Component","connect","addresses","ZiveLab","getFullRange","ip","includeEndpoints","validateIPaddress","ipStart","substr","lastIndexOf","Array","from","el","i","ipaddress","test","alert","isZiveDevice","mac","leading","toLowerCase","split","slice","join","indexOf","vendor","macLookup","FabAddDevice","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initialize","knownDevice","isValid","setState","validKnownDevice","handleOpen","open","handleClose","handleChange","event","newValue","target","value","console","log","handleClick","onClick","bind","assertThisInitialized","classes","_this$state","Fragment","Tooltip_default","title","aria-label","Fab_default","className","fab","color","size","Add_default","Dialog_default","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","FormControl_default","required","error","InputLabel_default","Input_default","autoFocus","label","onChange","fullWidth","DialogActions_default","Button_default","disabled","options","overrides","h1","component","Typography_default","assign","gutterBottom","variant","h2","h3","h4","paragraph","Link","li","withStyles","listItem","marginTop","spacing","unit","_ref","objectWithoutProperties","Markdown","esm","GettingStartedPage","md","_this2","fetch","Page","then","res","text","components_Markdown","markdown","launched","Date","getTime","states","NotAssigned","Idle","Running","Finished","Stopped","RunningNoiseLevel","defaultParameters","initialFrequency","finalFrequency","density","iteration","currentRange","maxInitialDelay","skip","cycles","ChannelPage","about","channel","cook","parameters","activeIndex","auxData","loadAboutAsync","loadChannelAsync","loadCookAsync","loadSamplesAsync","clearInterval","timerID","setInterval","ipAddress","aboutURL","aboutFetch","json","aboutJson","_context","t0","channelURL","channelFetch","channelJson","keys","find","key","isIdle","isRunning","isRunningNoiseLevel","newAuxItem","time","voltage","auxVoltage","temperature","auxTemperature","toConsumableArray","_this$state$auxData","toArray","rest","lastStarted","lastTicks","ticks","lastCount","count","started","_context2","cookURL","cookFetch","cookJson","moment","objectSpread","_context3","index","samplesURL","toString","samplesFetch","samplesJson","data","map","item","j","samples","_context4","main_default","src","displayDataTypes","collapsed","gettingStartedKey","Index","openDrawer","openSnackbar","snackbarMessage","selectedKey","localIP","localDevices","remoteDevices","scanDevices","isLocalScan","isRemoteScan","scanCompleted","scanTotal","toggleDrawer","handleTogglePaletteType","handleSnackbarClose","reason","handleListItemClick","handleLocalClick","findDevices","handleRemoteClick","handleAddKnownDevice","scanKnownDevice","GettingStartedTitle","noWrap","ChannelTitle","params","match","getAbout","model","startsWith","channelPage","_ref2","pages_ChannelPage","gettingStartedLink","react_router_dom","to","gettingStartedPage","pages_GettingStartedPage","componentDidMount","getLocalIPAddressAsync","isLocal","message","baseIP","_ref3","asyncToGenerator","regenerator_default","mark","_callee2","wrap","prev","next","stop","_x3","apply","Promise","resolve","reject","RTCPeerConnection","window","webkitRTCPeerConnection","mozRTCPeerConnection","rtc","iceServers","createDataChannel","reliable","onicecandidate","evt","candidate","addr","sdp","finalIP","forEach","line","parts","grepSDP","createOffer","offerDesc","setLocalDescription","e","warn","devices","aboutRequest","Request","macAddress","validDevice","serialNumber","filter","device","invalidDevice","LinearProgress_default","_this3","linkTo","deviceLink","listKey","Divider_default","ListItem_default","button","dense","selected","ListItemIcon_default","Tablet_default","ListItemText_default","_this4","_this$props","_this$state2","_this$state3","isScanning","isLocalScanning","isRemoteScanning","completed","root","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","IconButton_default","edge","menuButton","hide","Menu_default","react_router","path","exact","grow","enterDelay","LightbulbOutline_default","LightbulbFull_default","href","GitHub_default","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","ChevronLeft_default","ChevronRight_default","DeviceHub_default","ScanProgress","ListDevices","components_FabAddDevice","content","contentShift","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","close","Close_default","compose","_len","funcs","_key","reduce","b","arg","@global","strong","fontWeight","typography","fontWeightMedium","display","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","badgeMargin","margin","marginRight","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","bottom","right","body1","Boolean","location","hostname","ReactDOM","render","es","components_AppWrapper","pages_Index","navigator","serviceWorker","ready","registration","unregister","process","d","__webpack_exports__","styleNode","prismjs__WEBPACK_IMPORTED_MODULE_0__","prismjs__WEBPACK_IMPORTED_MODULE_0___default","n","textContent","browser","require","setAttribute","head","appendChild","prism","uiTheme","createMuiTheme","nprogress","palette","D_code_zivelab_channels_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.020b154f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gettingStarted.ce91325d.md\";","import { install } from \"@material-ui/styles\";\r\ninstall();\r\n","export const CODE_VARIANTS = {\r\n  JS: \"JS\",\r\n  TS: \"TS\"\r\n};\r\n\r\nexport const ACTION_TYPES = {\r\n  THEME_CHANGE: \"THEME_CHANGE\",\r\n  OPTIONS_CHANGE: \"OPTIONS_CHANGE\"\r\n};\r\n\r\n// Active\r\nexport const LANGUAGES = [\"en\", \"kr\"];\r\n\r\n// Work in progress\r\nexport const LANGUAGES_IN_PROGRESS = [\"en\", \"kr\"];\r\n","import blue from \"@material-ui/core/colors/blue\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\nimport { darken } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nconst themeInitialState = {\r\n  direction: \"ltr\",\r\n  paletteType: \"light\",\r\n  paletteColors: {\r\n    primary: blue,\r\n    secondary: {\r\n      // Darken so we reach the AA contrast ratio level.\r\n      main: darken(pink.A400, 0.08)\r\n    }\r\n  }\r\n};\r\n\r\nexport default themeInitialState;\r\n","import { ACTION_TYPES } from \"../constants\";\r\nimport themeInitialState from \"../styles/themeInitialState\";\r\n\r\nconst mapping = {\r\n  [ACTION_TYPES.THEME_CHANGE]: (state, action) => ({\r\n    paletteType: action.payload.paletteType || state.paletteType,\r\n    direction: action.payload.direction || state.direction,\r\n    paletteColors: action.payload.paletteColors || state.paletteColors\r\n  })\r\n};\r\n\r\nfunction themeReducer(state = themeInitialState, action) {\r\n  let newState = state;\r\n\r\n  if (mapping[action.type]) {\r\n    newState = mapping[action.type](state, action);\r\n  }\r\n\r\n  return newState;\r\n}\r\n\r\nexport default themeReducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport themeReducer from \"./themeReducer\";\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    theme: themeReducer\r\n  })\r\n);\r\n\r\nexport default store;\r\n","export function getCookie(name) {\r\n  const regex = new RegExp(`(?:(?:^|.*;*)${name}*=*([^;]*).*$)|^.*$`);\r\n  return document.cookie.replace(regex, \"$1\");\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  StylesProvider,\r\n  ThemeProvider,\r\n  createGenerateClassName\r\n} from \"@material-ui/styles\";\r\nimport { lightTheme, darkTheme, setPrismTheme } from \"./prism\";\r\nimport getTheme from \"../styles/getTheme\";\r\nimport { getCookie } from \"../utils/helpers\";\r\nimport { ACTION_TYPES } from \"../constants\";\r\n\r\nconst generateClassName = createGenerateClassName();\r\n\r\nfunction themeSideEffect(reduxTheme) {\r\n  setPrismTheme(reduxTheme.paletteType === \"light\" ? lightTheme : darkTheme);\r\n  document.body.dir = reduxTheme.direction;\r\n}\r\n\r\nclass AppWrapper extends React.Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    themeSideEffect(this.props.reduxTheme);\r\n\r\n    // Remove the server-side injected CSS.\r\n    const jssStyles = document.querySelector(\"#jss-server-side\");\r\n    if (jssStyles) {\r\n      jssStyles.parentNode.removeChild(jssStyles);\r\n    }\r\n\r\n    const { reduxTheme } = this.props;\r\n\r\n    const paletteType = getCookie(\"paletteType\");\r\n    const paletteColors = getCookie(\"paletteColors\");\r\n\r\n    if (\r\n      (paletteType && reduxTheme.paletteType !== paletteType) ||\r\n      (paletteColors &&\r\n        JSON.stringify(reduxTheme.paletteColors) !== paletteColors)\r\n    ) {\r\n      this.props.dispatch({\r\n        type: ACTION_TYPES.THEME_CHANGE,\r\n        payload: {\r\n          paletteType,\r\n          paletteColors: paletteColors ? JSON.parse(paletteColors) : null\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    themeSideEffect(this.props.reduxTheme);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (typeof prevState.theme === \"undefined\") {\r\n      return {\r\n        prevProps: nextProps,\r\n        theme: getTheme(nextProps.reduxTheme)\r\n      };\r\n    }\r\n\r\n    const { prevProps } = prevState;\r\n\r\n    if (\r\n      nextProps.reduxTheme.paletteType !== prevProps.reduxTheme.paletteType ||\r\n      nextProps.reduxTheme.paletteColors !==\r\n        prevProps.reduxTheme.paletteColors ||\r\n      nextProps.reduxTheme.direction !== prevProps.reduxTheme.direction\r\n    ) {\r\n      return {\r\n        prevProps: nextProps,\r\n        theme: getTheme(nextProps.reduxTheme)\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { theme } = this.state;\r\n    return (\r\n      <StylesProvider generateClassName={generateClassName}>\r\n        <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n      </StylesProvider>\r\n    );\r\n  }\r\n}\r\n\r\nAppWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n  reduxTheme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(state => ({\r\n  reduxTheme: state.theme\r\n}))(AppWrapper);\r\n","// 0x001BC5081000 to 0x001BC5081FFF\r\nconst addresses = {\r\n  ZiveLab: [\r\n    \"00:1b:c5:08:10\",\r\n    \"00:1b:c5:08:11\",\r\n    \"00:1b:c5:08:12\",\r\n    \"00:1b:c5:08:13\",\r\n    \"00:1b:c5:08:14\",\r\n    \"00:1b:c5:08:15\",\r\n    \"00:1b:c5:08:16\",\r\n    \"00:1b:c5:08:17\",\r\n    \"00:1b:c5:08:18\",\r\n    \"00:1b:c5:08:19\",\r\n    \"00:1b:c5:08:1a\",\r\n    \"00:1b:c5:08:1b\",\r\n    \"00:1b:c5:08:1c\",\r\n    \"00:1b:c5:08:1d\",\r\n    \"00:1b:c5:08:1e\",\r\n    \"00:1b:c5:08:1f\"\r\n  ]\r\n};\r\n\r\n// https://gist.github.com/hectorguo/672844c319547498dcb569df583f959d\r\n/**\r\n * Get Local IP Address\r\n *\r\n * @returns Promise Object\r\n *\r\n * getLocalIPAddress().then((ipAddr) => {\r\n *    console.log(ipAddr); // 192.168.0.122\r\n * });\r\n */\r\nfunction getLocalIPAddress() {\r\n  return new Promise(function(resolve, reject) {\r\n    // NOTE: window.RTCPeerConnection is \"not a constructor\" in FF22/23\r\n    var RTCPeerConnection =\r\n      /*window.RTCPeerConnection ||*/ window.webkitRTCPeerConnection ||\r\n      window.mozRTCPeerConnection;\r\n\r\n    if (!RTCPeerConnection) {\r\n      reject(\"Your browser does not support this API\");\r\n    }\r\n\r\n    var rtc = new RTCPeerConnection({ iceServers: [] });\r\n\r\n    function grepSDP(sdp) {\r\n      //var hosts = [];\r\n      var finalIP = \"\";\r\n      sdp.split(\"\\r\\n\").forEach(function(line) {\r\n        // c.f. http://tools.ietf.org/html/rfc4566#page-39\r\n        if (~line.indexOf(\"a=candidate\")) {\r\n          // http://tools.ietf.org/html/rfc4566#section-5.13\r\n          const parts = line.split(\" \"); // http://tools.ietf.org/html/rfc5245#section-15.1\r\n          const addr = parts[4];\r\n          const type = parts[7];\r\n          if (type === \"host\") {\r\n            finalIP = addr;\r\n          }\r\n        } else if (~line.indexOf(\"c=\")) {\r\n          // http://tools.ietf.org/html/rfc4566#section-5.7\r\n          const parts = line.split(\" \");\r\n          const addr = parts[2];\r\n          finalIP = addr;\r\n        }\r\n      });\r\n      return finalIP;\r\n    }\r\n\r\n    if (1 || window.mozRTCPeerConnection) {\r\n      // FF [and now Chrome!] needs a channel/stream to proceed\r\n      rtc.createDataChannel(\"\", { reliable: false });\r\n    }\r\n\r\n    rtc.onicecandidate = function(evt) {\r\n      // convert the candidate to SDP so we can run it through our general parser\r\n      // see https://twitter.com/lancestout/status/525796175425720320 for details\r\n      if (evt.candidate) {\r\n        var addr = grepSDP(\"a=\" + evt.candidate.candidate);\r\n        resolve(addr);\r\n      }\r\n    };\r\n    rtc.createOffer(\r\n      function(offerDesc) {\r\n        rtc.setLocalDescription(offerDesc);\r\n      },\r\n      function(e) {\r\n        console.warn(\"offer failed\", e);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Build array of full ip range (xxx.xxx.x.1-255) given example ip address\r\n * @param {String} ip\r\n */\r\nfunction getFullRange(ip, includeEndpoints = false) {\r\n  if (!validateIPaddress(ip)) return null;\r\n\r\n  var ipStart = ip.substr(0, ip.lastIndexOf(\".\") + 1);\r\n  return includeEndpoints\r\n    ? Array.from({ length: 255 }, (el, i) => ipStart + (i + 1))\r\n    : Array.from({ length: 253 }, (el, i) => ipStart + (i + 2));\r\n}\r\n\r\n/**\r\n * Check if the given ip address is valid\r\n * @param {String} ip\r\n */\r\nfunction validateIPaddress(ipaddress) {\r\n  if (\r\n    /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n      ipaddress\r\n    )\r\n  ) {\r\n    return true;\r\n  }\r\n  alert(\"You have entered an invalid IP address!\");\r\n  return false;\r\n}\r\n\r\n/**\r\n * Cross references provided mac address with lookup table (incomplete)\r\n * @param {string} mac\r\n * @param {string} type\r\n * @return {string}\r\n */\r\nfunction macLookup(mac, type) {\r\n  const leading = mac\r\n    .toLowerCase()\r\n    .split(\":\")\r\n    .slice(0, 5)\r\n    .join(\":\");\r\n\r\n  if (type && addresses[type]) {\r\n    if (addresses[type].indexOf(leading) > -1) return type;\r\n  }\r\n\r\n  if (JSON.stringify(addresses).indexOf(leading) === -1) return false;\r\n\r\n  for (var vendor in addresses) {\r\n    if (addresses[vendor].indexOf(leading) > -1) return vendor;\r\n  }\r\n}\r\n\r\nfunction isZiveDevice(mac) {\r\n  return macLookup(mac, \"ZiveLab\") === \"ZiveLab\";\r\n}\r\n\r\nexport {\r\n  getLocalIPAddress,\r\n  getFullRange,\r\n  validateIPaddress,\r\n  macLookup,\r\n  isZiveDevice\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport { validateIPaddress } from \"../utils/net\";\r\n\r\nclass FabAddDevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n      knownDevice: \"192.168.0.15\",\r\n      validKnownDevice: true\r\n    };\r\n\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initialize(this.props.knownDevice);\r\n  }\r\n\r\n  initialize = knownDevice => {\r\n    const isValid = validateIPaddress(knownDevice);\r\n    this.setState({\r\n      knownDevice: knownDevice,\r\n      validKnownDevice: isValid\r\n    });\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const newValue = event.target.value;\r\n    const isValid = validateIPaddress(newValue);\r\n    console.log(newValue);\r\n    this.setState({ knownDevice: newValue, validKnownDevice: isValid });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.handleClose();\r\n    this.props.onClick(this.state.knownDevice);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open, knownDevice, validKnownDevice } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Tooltip\r\n          title=\"Click to add known device\"\r\n          aria-label=\"Click to add known device\"\r\n        >\r\n          <Fab\r\n            aria-label=\"Add\"\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-known-device\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-known-device\">\r\n            Add known device\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please enter the known IP address of your device here.\r\n            </DialogContentText>\r\n            <br />\r\n            <FormControl required error={!validKnownDevice}>\r\n              <InputLabel>IP address</InputLabel>\r\n              <Input\r\n                autoFocus\r\n                id=\"ipAddress-to-add\"\r\n                label=\"IP address\"\r\n                value={knownDevice}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.handleClick}\r\n              color=\"primary\"\r\n              disabled={!validKnownDevice}\r\n            >\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nFabAddDevice.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  knownDevice: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default FabAddDevice;\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"markdown-to-jsx\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst styles = theme => ({\r\n  listItem: {\r\n    marginTop: theme.spacing.unit\r\n  }\r\n});\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: props => <Typography gutterBottom variant=\"h2\" {...props} />\r\n    },\r\n    h2: {\r\n      component: props => <Typography gutterBottom variant=\"h4\" {...props} />\r\n    },\r\n    h3: {\r\n      component: props => (\r\n        <Typography gutterBottom variant=\"subtitle1\" {...props} />\r\n      )\r\n    },\r\n    h4: {\r\n      component: props => (\r\n        <Typography gutterBottom variant=\"caption\" paragraph {...props} />\r\n      )\r\n    },\r\n    p: { component: props => <Typography paragraph {...props} /> },\r\n    a: { component: Link },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      ))\r\n    }\r\n  }\r\n};\r\n\r\nfunction Markdown(props) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}\r\n\r\nexport default Markdown;\r\n","import React, { Component } from \"react\";\r\nimport Markdown from \"../modules/components/Markdown\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Page from \"../docs/pages/gettingStarted/gettingStarted.md\";\r\n\r\nclass GettingStartedPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { md: \"\" };\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch(Page)\r\n      .then(res => res.text())\r\n      .then(md => {\r\n        this.setState({ md });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    let { md } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Markdown className={classes.markdown}>{md}</Markdown>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGettingStartedPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default GettingStartedPage;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ReactJson from \"react-json-view\";\r\nimport moment from \"moment\";\r\n\r\n// Special characters\r\n/*\r\nconst voltageSign = \"V\";\r\nconst currentSign = \"A\";\r\nconst frequencySign = \"Hz\";\r\nconst ohmSign = \"\\u2126\";\r\nconst degreeSign = \"\\u00B0\";\r\nconst degreeCelsiusSign = \"\\u00B0C\";\r\n*/\r\n\r\n// Math Constatnts\r\nconst dateTimeOffset = 62135596800000; // ticks from 0000-01-01 to 1970-01-01\r\nconst launched = new Date().getTime();\r\n//const queue = [];\r\n\r\n// Device specfic constants\r\nconst states = {\r\n  NotAssigned: \"NotAssigned\",\r\n  Idle: \"Idle\",\r\n  Running: \"Running\",\r\n  Finished: \"Finished\",\r\n  Stopped: \"Stopped\",\r\n  RunningNoiseLevel: \"RunningNoiseLevel\"\r\n};\r\n//const voltageRanges = [\r\n//  { value: 0, label: \"1000V\" },\r\n//  { value: 1, label: \"100V\" }\r\n//];\r\n//const currentRanges = [\r\n//  { value: 0, label: \"2A\" },\r\n//  { value: 1, label: \"400mA\" },\r\n//  { value: 2, label: \"200mA\" },\r\n//  { value: 3, label: \"40mA\" },\r\n//  { value: 4, label: \"20mA\" },\r\n//  { value: 5, label: \"4mA\" },\r\n//  { value: 6, label: \"2mA\" },\r\n//  { value: 7, label: \"400uA\" }\r\n//];\r\n//const aboutLabels = {\r\n//  model: \"Model\",\r\n//  description: \"Description\",\r\n//  frequencyRanges: \"Frequency Ranges\",\r\n//  voltageRanges: \"Voltage Ranges\",\r\n//  currentRanges: \"Current Ranges\",\r\n//  temperatureSensor: \"Temperature Sensor\",\r\n//  macAddress: \"Mac Address\",\r\n//  ipAddress: \"IP Address\",\r\n//  subnetMask: \"Subnet Mask\",\r\n//  router: \"Router\",\r\n//  port: \"Port\",\r\n//  sifBoard: \"SIF Board\",\r\n//  sifFirmware: \"SIF Firmware\",\r\n//  sifSerialNumber: \"SIF Serial Number\",\r\n//  zimBoard: \"ZIM Board\",\r\n//  zimFirmware: \"ZIM Firmware\",\r\n//  zimSerialNumber: \"ZIM Serial Number\"\r\n//};\r\n//const colHeaders = {\r\n//  pt: \"Pt\",\r\n//  time: \"Time [s]\",\r\n//  frequency: \"Freq [Hz]\",\r\n//  zreal: \"Zreal [\" + { ohmSign } + \"]\",\r\n//  zimag: \"Zimag [\" + { ohmSign } + \"]\",\r\n//  zmod: \"Zmod [\" + { ohmSign } + \"]\",\r\n//  zphase: \"Zphase [\" + { degreeSign } + \"]\",\r\n//  idc: \"Idc [A]\",\r\n//  vdc: \"vdc [V]\",\r\n//  temperature: \"Temperature [\" + { degreeCelsiusSign } + \"]\",\r\n//  currentRange: \"IRange [A]\"\r\n//};\r\nconst defaultParameters = {\r\n  initialFrequency: 1000,\r\n  finalFrequency: 1.0,\r\n  density: 10,\r\n  iteration: 1,\r\n  currentRange: 2,\r\n  maxInitialDelay: 12.0,\r\n  skip: 1,\r\n  cycles: 0\r\n};\r\n/*\r\nconst parameterLabels = {\r\n  initialFrequency: {\r\n    label: \"Initial Frequency\",\r\n    min: 0.1,\r\n    max: 4000,\r\n    default: 1000\r\n  },\r\n  finalFrequency: { label: \"Final Frequency\", min: 0.1, max: 4000, default: 1 },\r\n  density: { label: \"Density\", min: 1, max: 20, default: 10 },\r\n  iteration: { label: \"Iteration\", min: 1, max: 100, default: 1 },\r\n  currentRange: { label: \"Current Range\", min: 0, max: 7, default: 2 },\r\n  maxInitialDelay: {\r\n    label: \"Max Initial Delay\",\r\n    min: 0,\r\n    max: 100,\r\n    default: 12\r\n  },\r\n  skip: { label: \"skip\", min: 1, max: 100, default: 1 },\r\n  cycles: { label: \"cycles\", min: 0, max: 100, default: 0 }\r\n};\r\n*/\r\n\r\nclass ChannelPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      about: null,\r\n      channel: null,\r\n      cook: null,\r\n\r\n      parameters: defaultParameters,\r\n      activeIndex: -1,\r\n\r\n      auxData: []\r\n    };\r\n\r\n    this.loadAboutAsync = this.loadAboutAsync.bind(this);\r\n    this.loadChannelAsync = this.loadChannelAsync.bind(this);\r\n    this.loadCookAsync = this.loadCookAsync.bind(this);\r\n    this.loadSamplesAsync = this.loadSamplesAsync.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadAboutAsync();\r\n    this.loadChannelAsync();\r\n    this.timerID = setInterval(() => this.loadChannelAsync, 1000);\r\n  }\r\n\r\n  async loadAboutAsync() {\r\n    const { ipAddress } = this.props;\r\n    try {\r\n      const aboutURL = \"http://\" + ipAddress + \"/about\";\r\n      const aboutFetch = await fetch(aboutURL);\r\n      const aboutJson = await aboutFetch.json();\r\n      if (aboutJson) {\r\n        this.setState({\r\n          about: aboutJson\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async loadChannelAsync() {\r\n    const { ipAddress } = this.props;\r\n    console.log(\"loadChannelAsync\");\r\n    try {\r\n      const channelURL = \"http://\" + ipAddress + \"/channel\";\r\n      const channelFetch = await fetch(channelURL);\r\n      const channelJson = await channelFetch.json();\r\n      if (channelJson) {\r\n        const state = Object.keys(states).find(\r\n          key => states[key] === channelJson.state\r\n        );\r\n        channelJson.isIdle = state === states.Idle;\r\n        channelJson.isRunning =\r\n          state === states.Running ||\r\n          state === states.Finished ||\r\n          state === states.Stopped;\r\n        channelJson.isRunningNoiseLevel = state === states.RunningNoiseLevel;\r\n\r\n        /*\r\n        if (state === states.Running && this.state.channel.isIdle) {\r\n          this.handleSnackBar(\"Started\");\r\n        } else if (state === states.Finished) {\r\n          this.handleSnackBar(\"Successfully finished\");\r\n        } else if (state === states.Stopped) {\r\n          this.handleSnackBar(\"Manually stopped\");\r\n        }\r\n        */\r\n\r\n        // Update state: channel and auxData\r\n        const newAuxItem = {\r\n          time: new Date().getTime() - launched,\r\n          voltage: channelJson.auxVoltage,\r\n          temperature: channelJson.auxTemperature\r\n        };\r\n        if (this.state.auxData.length < 200) {\r\n          this.setState({\r\n            channel: channelJson,\r\n            auxData: [...this.state.auxData, newAuxItem]\r\n          });\r\n        } else {\r\n          // eslint-disable-next-line\r\n          const [first, ...rest] = this.state.auxData;\r\n          this.setState({\r\n            channel: channelJson,\r\n            auxData: [...rest, newAuxItem]\r\n          });\r\n        }\r\n        // If lastStarted does not equals to cook.started, update cook.\r\n        if (channelJson.lastStarted) {\r\n          const lastTicks = channelJson.lastStarted.ticks;\r\n          const lastCount = channelJson.lastStarted.count;\r\n          if (\r\n            !this.state.cook ||\r\n            this.state.cook.started.ticks !== lastTicks ||\r\n            this.state.cook.started.count !== lastCount\r\n          ) {\r\n            this.loadCookAsync();\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      //clearInterval(this.timerID );\r\n    }\r\n  }\r\n\r\n  async loadCookAsync() {\r\n    const { ipAddress } = this.props;\r\n    try {\r\n      const cookURL = \"http://\" + ipAddress + \"/cook\";\r\n      const cookFetch = await fetch(cookURL);\r\n      const cookJson = await cookFetch.json();\r\n      if (cookJson) {\r\n        cookJson.started.moment = moment(\r\n          cookJson.started.ticks - dateTimeOffset\r\n        );\r\n        this.setState({\r\n          cook: cookJson,\r\n          parameters: { ...cookJson.parameters }\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async loadSamplesAsync(index) {\r\n    try {\r\n      const samplesURL =\r\n        \"http://\" + this.props.ipAddress + \"/sample?\" + index.toString();\r\n      const samplesFetch = await fetch(samplesURL);\r\n      const samplesJson = await samplesFetch.json();\r\n      if (\r\n        samplesJson &&\r\n        this.state.cook &&\r\n        this.state.cook.data &&\r\n        index >= 0 &&\r\n        index < this.state.cook.data.length\r\n      ) {\r\n        // Update state: cook[index].samples\r\n        const data = this.state.cook.data.map((item, j) => {\r\n          if (j === index) {\r\n            return (item.samples = samplesJson);\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        this.setState({\r\n          cook: {\r\n            ...this.state.cook,\r\n            [data]: data\r\n          }\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { about, channel, cook } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <h2>About</h2>\r\n        {about ? (\r\n          <ReactJson src={about} displayDataTypes={false} collapsed={true} />\r\n        ) : (\r\n          <div />\r\n        )}\r\n        <h2>Channel</h2>\r\n        {channel ? (\r\n          <ReactJson src={channel} displayDataTypes={false} collapsed={true} />\r\n        ) : (\r\n          <div />\r\n        )}\r\n        <h2>Cook</h2>\r\n        {cook ? (\r\n          <ReactJson src={cook} displayDataTypes={false} collapsed={true} />\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChannelPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  ipAddress: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ChannelPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { HashRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// controls\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Icons\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeviceHubIcon from \"@material-ui/icons/DeviceHub\";\r\nimport GithubIcon from \"@material-ui/docs/svgIcons/GitHub\";\r\nimport LightbulbOutlineIcon from \"@material-ui/docs/svgIcons/LightbulbOutline\";\r\nimport LightbulbFullIcon from \"@material-ui/docs/svgIcons/LightbulbFull\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport TabletIcon from \"@material-ui/icons/Tablet\";\r\n\r\n// functions\r\nimport compose from \"../modules/utils/compose\";\r\nimport {\r\n  getLocalIPAddress,\r\n  getFullRange,\r\n  isZiveDevice\r\n} from \"../modules/utils/net\";\r\n\r\n// Components\r\nimport FabAddDevice from \"../modules/components/FabAddDevice\";\r\n\r\n// Pages\r\nimport GettingStartedPage from \"./GettingStartedPage\";\r\nimport ChannelPage from \"./ChannelPage\";\r\n\r\nimport { ACTION_TYPES } from \"../modules/constants\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    strong: {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    }\r\n  },\r\n\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  badgeMargin: {\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n    marginTop: \"32px\"\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2\r\n  },\r\n  markdown: {\r\n    ...theme.typography.body1,\r\n    padding: \"0 8px\",\r\n    margin: \"32px\"\r\n  }\r\n});\r\n\r\nconst gettingStartedKey = \"getting-started-nav\";\r\n\r\nclass Index extends React.Component {\r\n  state = {\r\n    openDrawer: false,\r\n    openSnackbar: false,\r\n    snackbarMessage: \"\",\r\n    selectedKey: gettingStartedKey,\r\n\r\n    localIP: null,\r\n    localDevices: [],\r\n    remoteDevices: [],\r\n    knownDevice: \"192.168.0.15\",\r\n\r\n    scanDevices: false,\r\n    isLocalScan: false,\r\n    isRemoteScan: false,\r\n    scanCompleted: 0,\r\n    scanTotal: 0\r\n  };\r\n\r\n  toggleDrawer = open => () => {\r\n    this.setState({ openDrawer: open });\r\n  };\r\n\r\n  handleTogglePaletteType = () => {\r\n    const paletteType =\r\n      this.props.reduxTheme.paletteType === \"light\" ? \"dark\" : \"light\";\r\n    document.cookie = `paletteType=${paletteType};path=/;max-age=31536000`;\r\n\r\n    this.props.dispatch({\r\n      type: ACTION_TYPES.THEME_CHANGE,\r\n      payload: {\r\n        paletteType\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({ openSnackbar: false });\r\n  };\r\n\r\n  handleListItemClick = (event, key) => {\r\n    this.setState({ selectedKey: key });\r\n  };\r\n\r\n  handleLocalClick = () => {\r\n    this.findDevices(true);\r\n  };\r\n\r\n  handleRemoteClick = () => {\r\n    this.findDevices(false);\r\n  };\r\n\r\n  handleAddKnownDevice = ip => {\r\n    this.setState({ knownDevice: ip });\r\n    this.scanKnownDevice(ip);\r\n  };\r\n\r\n  async scanKnownDevice(ip) {\r\n    await this.loadAboutAsync(ip);\r\n  }\r\n\r\n  async findDevices(isLocal) {\r\n    try {\r\n      const message = isLocal\r\n        ? \"Scanning local devices...\"\r\n        : \"Scanning remote devices...\";\r\n      this.setState({ openSnackbar: true, snackbarMessage: message });\r\n      if (!isLocal && !this.state.localIP) {\r\n        await this.getLocalIPAddressAsync();\r\n      }\r\n      const baseIP = isLocal ? \"169.254.17.1\" : this.state.localIP;\r\n      const scanDevices = getFullRange(baseIP);\r\n      this.setState({\r\n        isLocalScan: isLocal,\r\n        isRemoteScan: !isLocal,\r\n        scanCompleted: 0,\r\n        scanTotal: scanDevices.length\r\n      });\r\n      scanDevices.map(async ip => {\r\n        await this.loadAboutAsync(ip);\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async getLocalIPAddressAsync() {\r\n    try {\r\n      const ip = await getLocalIPAddress();\r\n      if (ip) {\r\n        const knownDevice =\r\n          ip\r\n            .split(\".\")\r\n            .slice(0, 3)\r\n            .join(\".\") + \".15\";\r\n        this.setState({\r\n          localIP: ip,\r\n          knownDevice: knownDevice\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async loadAboutAsync(ip) {\r\n    // ip should be a valid IP address.\r\n    const isLocal = ip.split(\".\").slice(0, 1) === \"169\";\r\n    const devices = isLocal ? \"localDevices\" : \"remoteDevices\";\r\n    try {\r\n      const aboutURL = \"http://\" + ip + \"/about\";\r\n      const aboutRequest = new Request(aboutURL);\r\n      const aboutFetch = await fetch(aboutRequest);\r\n      const aboutJson = await aboutFetch.json();\r\n      if (aboutJson) {\r\n        if (!isZiveDevice(aboutJson.macAddress)) return;\r\n        const validDevice = {\r\n          name: aboutJson.model,\r\n          serialNumber: aboutJson.serialNumber,\r\n          ipAddress: aboutJson.ipAddress,\r\n          macAddress: aboutJson.macAddress,\r\n          about: aboutJson\r\n        };\r\n        if (\r\n          this.state[devices].filter(device => device.ipAddress === ip)\r\n            .length <= 0\r\n        ) {\r\n          this.setState({\r\n            [devices]: [...this.state[devices], validDevice]\r\n          });\r\n        }\r\n      }\r\n    } catch (e) {\r\n      const invalidDevice = this.state[devices].filter(\r\n        device => device.ipAddress === ip\r\n      );\r\n      this.setState({\r\n        [devices]: this.state[devices].filter(function(device) {\r\n          return device !== invalidDevice;\r\n        })\r\n      });\r\n    } finally {\r\n      this.setState({ scanCompleted: this.state.scanCompleted + 1 });\r\n    }\r\n  }\r\n\r\n  ScanProgress(disabled = false, value = 0) {\r\n    if (disabled) {\r\n      return <React.Fragment />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={value}\r\n            color=\"secondary\"\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  ListDevices(devices) {\r\n    const linkTo = ip => \"/device/\" + ip;\r\n    const deviceLink = ip => props => <Link to={linkTo(ip)} {...props} />;\r\n    const listKey = ip => {\r\n      return \"nav-device-\" + ip.split(\".\").join(\"-\");\r\n    };\r\n    const dividerKey = ip => {\r\n      return \"nav-divider-\" + ip.split(\".\").join(\"-\");\r\n    };\r\n    if (devices) {\r\n      return devices.map(device => (\r\n        <React.Fragment>\r\n          <Divider variant=\"inset\" key={dividerKey(device.ipAddress)} />\r\n          <ListItem\r\n            button\r\n            dense\r\n            key={listKey(device.ipAddress)}\r\n            component={deviceLink(device.ipAddress)}\r\n            selected={this.state.selectedKey === device.ipAddress}\r\n            onClick={event => this.handleListItemClick(event, device.ipAddress)}\r\n          >\r\n            <ListItemIcon>\r\n              <TabletIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={device.name} secondary={device.ipAddress} />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      ));\r\n    } else {\r\n      return <React.Fragment />;\r\n    }\r\n  }\r\n\r\n  getAbout(ip) {\r\n    if (!ip) return null;\r\n    const isLocal = ip.split(\".\").slice(0, 1) === \"169\";\r\n    const devices = isLocal ? \"localDevices\" : \"remoteDevices\";\r\n    const matchedDevice = this.state[devices].find(function(device) {\r\n      return device.ipAddress === ip;\r\n    });\r\n    return matchedDevice.about;\r\n  }\r\n\r\n  GettingStartedTitle = () => (\r\n    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n      Zive Channels\r\n    </Typography>\r\n  );\r\n\r\n  ChannelTitle = ({ match: { params } }) => {\r\n    const about = this.getAbout(params.id);\r\n    const model = about.model.startsWith(\"Zive\")\r\n      ? about.model\r\n          .split(\" \")\r\n          .slice(1)\r\n          .join(\" \")\r\n      : about.model;\r\n    const ip = about.ipAddress;\r\n    return (\r\n      <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n        {model} ({ip}) - Zive Channels\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  channelPage = ({ match: { params } }) => {\r\n    return (\r\n      <React.Fragment>\r\n        <ChannelPage ipAddress={params.id} />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  gettingStartedLink = props => <Link to=\"/\" {...props} />;\r\n\r\n  gettingStartedPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <GettingStartedPage classes={this.props} />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getLocalIPAddressAsync();\r\n  };\r\n\r\n  render() {\r\n    const { classes, reduxTheme } = this.props;\r\n    const { openDrawer, openSnackbar, snackbarMessage } = this.state;\r\n    const { localIP, localDevices, remoteDevices } = this.state;\r\n    const { isLocalScan, isRemoteScan, scanCompleted, scanTotal } = this.state;\r\n\r\n    // progress in scanning\r\n    const isScanning = scanTotal > 0 && scanCompleted < scanTotal;\r\n    const isLocalScanning = isLocalScan && isScanning;\r\n    const isRemoteScanning = isRemoteScan && isScanning;\r\n    const completed = isScanning ? (scanCompleted * 100) / scanTotal : 0;\r\n    return (\r\n      <Router>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={classNames(classes.appBar, {\r\n              [classes.appBarShift]: openDrawer\r\n            })}\r\n          >\r\n            <Toolbar disableGutters={!openDrawer}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={this.toggleDrawer(true)}\r\n                className={classNames(\r\n                  classes.menuButton,\r\n                  openDrawer && classes.hide\r\n                )}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Switch>\r\n                <Route path=\"/\" exact component={this.GettingStartedTitle} />\r\n                <Route path=\"/device/:id\" exact component={this.ChannelTitle} />\r\n              </Switch>\r\n              <div className={classes.grow} />\r\n              <Tooltip title=\"Toggle theme\" enterDelay={300}>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  onClick={this.handleTogglePaletteType}\r\n                  aria-label=\"toggleTheme\"\r\n                >\r\n                  {reduxTheme.paletteType === \"light\" ? (\r\n                    <LightbulbOutlineIcon />\r\n                  ) : (\r\n                    <LightbulbFullIcon />\r\n                  )}\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"github\" enterDelay={300}>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  component=\"a\"\r\n                  color=\"inherit\"\r\n                  href=\"https://github.com/zivelab/zivelab-channels\"\r\n                  aria-label=\"github\"\r\n                >\r\n                  <GithubIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={openDrawer}\r\n            classes={{\r\n              paper: classes.drawerPaper\r\n            }}\r\n          >\r\n            <div className={classes.drawerHeader}>\r\n              <IconButton onClick={this.toggleDrawer(false)}>\r\n                {reduxTheme.direction === \"ltr\" ? (\r\n                  <ChevronLeftIcon />\r\n                ) : (\r\n                  <ChevronRightIcon />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n            <Divider key=\"nav-first-divider\" />\r\n            <ListItem\r\n              button\r\n              dense\r\n              key={gettingStartedKey}\r\n              component={this.gettingStartedLink}\r\n              selected={this.state.selectedKey === gettingStartedKey}\r\n              onClick={event =>\r\n                this.handleListItemClick(event, gettingStartedKey)\r\n              }\r\n            >\r\n              <ListItemText primary=\"Getting Started\" />\r\n            </ListItem>\r\n            <Divider key=\"nav-second-divider\" />\r\n            <Tooltip\r\n              title=\"Click to scan local devices\"\r\n              aria-label=\"Click to scan local devices\"\r\n            >\r\n              <ListItem\r\n                button\r\n                dense\r\n                key=\"nav-local-devices\"\r\n                onClick={this.handleLocalClick}\r\n                disabled={isScanning}\r\n              >\r\n                <ListItemIcon>\r\n                  <DeviceHubIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Scan My Devices\"\r\n                  secondary={\r\n                    isLocalScanning\r\n                      ? \"scanning... \" + scanCompleted + \"/\" + scanTotal\r\n                      : localDevices.length\r\n                      ? \"\"\r\n                      : \"no devices found\"\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </Tooltip>\r\n            {this.ScanProgress(!isLocalScanning, completed)}\r\n            {this.ListDevices(localDevices)}\r\n            <Divider key=\"nav-third-divider\" />\r\n            <Tooltip\r\n              title=\"Click to scan remote devices\"\r\n              aria-label=\"Click to scan remote devices\"\r\n            >\r\n              <ListItem\r\n                button\r\n                dense\r\n                key=\"nav-remote-devices\"\r\n                onClick={this.handleRemoteClick}\r\n                disabled={isScanning}\r\n              >\r\n                <ListItemIcon>\r\n                  <DeviceHubIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Scan Remote Devices\"\r\n                  secondary={\r\n                    isRemoteScanning\r\n                      ? \"scanning... \" + scanCompleted + \"/\" + scanTotal\r\n                      : remoteDevices.length\r\n                      ? localIP\r\n                      : \"no devices found\"\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </Tooltip>\r\n            {this.ScanProgress(!isRemoteScanning, completed)}\r\n            {this.ListDevices(remoteDevices)}\r\n            <Divider key=\"nav-last-divider\" />\r\n            <FabAddDevice\r\n              classes={classes}\r\n              knownDevice={this.state.knownDevice}\r\n              onClick={this.handleAddKnownDevice}\r\n            />\r\n          </Drawer>\r\n          <main\r\n            className={classNames(classes.content, {\r\n              [classes.contentShift]: openDrawer\r\n            })}\r\n          >\r\n            <div className={classes.drawerHeader} />\r\n            <Switch>\r\n              <Route path=\"/\" exact component={this.gettingStartedPage} />\r\n              <Route path=\"/device/:id\" exact component={this.channelPage} />\r\n            </Switch>\r\n          </main>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\"\r\n            }}\r\n            open={openSnackbar}\r\n            autoHideDuration={2000}\r\n            onClose={this.handleSnackbarClose}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            message={<span id=\"message-id\">{snackbarMessage}</span>}\r\n            action={[\r\n              <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            ]}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nIndex.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n  reduxTheme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(\r\n  connect(state => ({\r\n    reduxTheme: state.theme\r\n  })),\r\n  withStyles(styles)\r\n)(Index);\r\n","export default function compose(...funcs) {\r\n  return funcs.reduce((a, b) => (...args) => a(b(...args)), arg => arg);\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"./bootstrap\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./modules/redux/store\";\r\nimport AppWrapper from \"./modules/components/AppWrapper\";\r\nimport Index from \"./pages/Index\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppWrapper>\r\n      <Index />\r\n    </AppWrapper>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","/* eslint-disable import/no-mutable-exports, global-require */\r\n\r\nimport prism from \"prismjs\";\r\nimport \"prismjs/components/prism-css\";\r\nimport \"prismjs/components/prism-diff\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/components/prism-jsx\";\r\nimport \"prismjs/components/prism-markup\";\r\nimport \"prismjs/components/prism-typescript\";\r\n\r\nlet styleNode;\r\nlet lightTheme;\r\nlet darkTheme;\r\n\r\nif (process.browser) {\r\n  lightTheme = require(\"prismjs/themes/prism.css\");\r\n  darkTheme = require(\"prismjs/themes/prism-okaidia.css\");\r\n\r\n  styleNode = document.createElement(\"style\");\r\n  styleNode.setAttribute(\"data-prism\", \"true\");\r\n  document.head.appendChild(styleNode);\r\n}\r\n\r\nexport { lightTheme, darkTheme };\r\n\r\nexport function setPrismTheme(theme) {\r\n  styleNode.textContent = theme;\r\n}\r\n\r\nexport default prism;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nfunction getTheme(uiTheme) {\r\n  const theme = createMuiTheme({\r\n    direction: uiTheme.direction,\r\n    nprogress: { color: uiTheme.paletteType === \"light\" ? \"#000\" : \"#fff\" },\r\n    palette: { ...uiTheme.paletteColors, type: uiTheme.paletteType }\r\n  });\r\n\r\n  // Expose the theme as a global variable so people can play with it.\r\n  if (process.browser) {\r\n    window.theme = theme;\r\n  }\r\n\r\n  return theme;\r\n}\r\n\r\nexport default getTheme;\r\n"],"sourceRoot":""}